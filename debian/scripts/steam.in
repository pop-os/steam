#!/bin/sh
# Copyright (C) 2013-2018 Michael Gilbert <mgilbert@debian.org>
# Copyright (C) 2018-2020 Simon McVittie
# Copyright (C) 2020 Collabora Ltd.
# SPDX-License-Identifier: MIT

set -e

# Used by diagnostic tools to identify the launcher
export STEAMSCRIPT="$0"
# Edited by debian/rules to fill in the real version number
export STEAMSCRIPT_VERSION='uninstalled/Debian'

# According to Valve, ~/.steam is intended to be a control directory containing
# symbolic links pointing to the currently-running or most-recently-run Steam
# installation. This is part of Steam's API, and is relied on by external
# components.
#
# The shell variable name STEAMCONFIG matches what's used in Valve's
# /usr/bin/steam (available at $STEAMDIR/bin_steam.sh in a Steam
# installation).
STEAMCONFIG="$HOME/.steam"

: "${XDG_DATA_HOME:="$HOME/.local/share"}"

# Fix dangling symlinks
if [ -L "$STEAMCONFIG/steam" ] && ! [ -e "$STEAMCONFIG/steam" ]; then
    rm -f "$STEAMCONFIG/steam"
fi
if [ -L "$STEAMCONFIG/root" ] && ! [ -e "$STEAMCONFIG/root" ]; then
    rm -f "$STEAMCONFIG/root"
fi

# STEAMDIR points to the actual installation root: the equivalent of
# C:\Program Files\Steam in the Windows Steam client. To avoid filename
# collisions this should be distinct from ~/.steam.
#
# The shell variable name STEAMDIR matches what's used in Valve's
# /usr/bin/steam (bin_steam.sh).
#
# Strictly speaking, there can be two separate Steam directories:
# ~/.steam/steam is a symlink to the Steam data directory (containing
# e.g. games), while ~/.steam/root is a symlink to the Steam installation
# (containing the Steam executable and the Steam Runtime). This is used
# when testing new Steam client binaries, and older versions of this Debian
# package set up a similar situation by mistake.
if [ -L "$STEAMCONFIG/steam" ]; then
    STEAMDIR="$(readlink -e -q "$STEAMCONFIG/steam")"
elif [ -L "$STEAMCONFIG/root" ]; then
    STEAMDIR="$(readlink -e -q "$STEAMCONFIG/root")"
elif [ -d "$STEAMCONFIG/steam" ] && ! [ -L "$STEAMCONFIG/steam" ]; then
    # The historical Debian behaviour has been to use ~/.steam as the
    # installation directory in addition to using it as the control
    # directory.This causes some file collisions, so we've moved away
    # from that, but we can't easily disentangle this in existing
    # installations.
    STEAMDIR="$HOME/.steam"
else
    # This is a new installation, so use a distinct directory to avoid
    # file collisions. Valve would use $XDG_DATA_HOME/Steam here.
    # Debian uses a subdirectory of ~/.steam, to avoid having a mixture
    # of XDG basedirs and traditional dotfiles in the same application.
    STEAMDIR="$HOME/.steam/debian-installation"
fi

# use C locale (bug #764311)
test -n "$LANG" || export LANG=C

# do an initial update when expected pieces are missing
test ! -d "$STEAMCONFIG" && rm -rf "$STEAMCONFIG" && mkdir -p "$STEAMCONFIG" || true
test ! -d "$STEAMDIR" && rm -rf "$STEAMDIR" && mkdir -p "$STEAMDIR" || true

# Recent versions of the proprietary steam executable exit with an
# assertion failure if these links aren't already set up.
if ! [ -d "$STEAMCONFIG/steam" ]; then
    ln -fns "$STEAMDIR" "$STEAMCONFIG/steam"
fi
if ! [ -d "$STEAMCONFIG/root" ]; then
    ln -fns "$STEAMDIR" "$STEAMCONFIG/root"
fi

version="1.0.0.75"
sha256="e52565a5e33b9a4184c5bdc222978b7fea958efd32641d5d5967774d751236a7"
url="https://repo.steampowered.com/steam/archive/stable/steam_${version}.tar.gz"
installed="$(cat "$STEAMDIR/deb-installer/version" 2>/dev/null || true)"
force_unpack=

mkdir -p "$STEAMDIR"

for needed in \
    steam.sh \
    ubuntu12_32/steam \
    ubuntu12_32/steam-runtime/run.sh \
    ubuntu12_32/steam-runtime/setup.sh \
; do
    if ! [ -x "$STEAMDIR/$needed" ]; then
        force_unpack=yes
    fi
done

if [ "$installed" != "$version" ] || [ -n "$force_unpack" ]; then
    mkdir -p "$STEAMDIR/deb-installer"
    curl -o "$STEAMDIR/deb-installer/steam_${version}.tar.gz.$$" "$url"
    got="$(sha256sum -b "$STEAMDIR/deb-installer/steam_${version}.tar.gz.$$")"

    if [ "${got% *}" != "$sha256" ]; then
        echo "SHA256 verification failed" >&2
        echo "Expected: $sha256" >&2
        echo "Got:      $got" >&2
        rm -f "$STEAMDIR/deb-installer/steam_${version}.tar.gz.$$"
        exit 1
    fi

    tar \
        -C "$STEAMDIR/deb-installer" \
        -zxf "$STEAMDIR/deb-installer/steam_${version}.tar.gz.$$" \
        steam-launcher/bootstraplinux_ubuntu12_32.tar.xz \
        steam-launcher/icons \
        steam-launcher/steam.desktop \
        ${NULL+}
    mv \
        "$STEAMDIR/deb-installer/steam-launcher/bootstraplinux_ubuntu12_32.tar.xz" \
        "$STEAMDIR/bootstrap.tar.xz"
    rm -f "$STEAMDIR/deb-installer/steam_${version}.tar.gz.$$"

    if [ -n "$force_unpack" ]; then
        tar -C "$STEAMDIR" \
            -xf "$STEAMDIR/bootstrap.tar.xz" \
            ${NULL+}
    fi

    # Use the proprietary icons to replace the ones from the .deb
    for i in 16 24 32 48 256; do
        target="$STEAMDIR/deb-installer/steam-launcher/icons/$i/steam.png"
        dest="${XDG_DATA_HOME}/icons/hicolor/${i}x${i}/apps/steam.png"
        mkdir -p "${dest%/*}"
        if [ -L "$dest" ] || ! [ -e "$dest" ]; then
            ln -fns "$target" "$dest"
        fi
    done

    # Use the proprietary .desktop file to replace the one from the .deb
    target="$STEAMDIR/deb-installer/steam.desktop"
    dest="${XDG_DATA_HOME}/applications/steam.desktop"
    mkdir -p "${dest%/*}"
    # Adjust proprietary .desktop file for our installation location
    sed \
        -e '/^Exec=/ s,/usr/bin/steam,/usr/games/steam,g' \
        -e 's,^Exec=steam ,Exec=/usr/games/steam ,' \
        -e '/^Actions=/ a Keywords=Games' \
        < "$STEAMDIR/deb-installer/steam-launcher/steam.desktop" \
        > "$target"
    if [ -L "$dest" ] || ! [ -e "$dest" ]; then
        ln -fns "$target" "$dest"
    fi

    # Force update
    mkdir -p "${XDG_DATA_HOME}/icons/hicolor/"
    touch "${XDG_DATA_HOME}/icons/hicolor/"
    touch "${XDG_DATA_HOME}/applications/"

    echo "$version" > "$STEAMDIR/deb-installer/version.$$"
    mv "$STEAMDIR/deb-installer/version.$$" "$STEAMDIR/deb-installer/version"
fi

# Remove old log file to avoid confusion. To debug game/Steam issues,
# please run this script from an interactive terminal, run it with its
# stdout/stderr redirected, or wrap it with script(1).
rm -f "$STEAMDIR/error.log"

# launch the Valve run script
exec "$STEAMDIR/steam.sh" -nominidumps -nobreakpad "$@"

# vi:set sw=4 sts=4 et:
